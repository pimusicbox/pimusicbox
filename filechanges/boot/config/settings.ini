################################# 
# Pi MusicBox / Mopidy Settings # 
################################# 
# 
# Edit the settings of your MusicBox and the Mopidy music server here
# This is a file read by both the MusicBox startup-scripts and Mopidy.
# For more info on the settings of Mopidy: http://docs.mopidy.com/en/latest/config/
#
# Every line starting with a # is a comment, it does not do anything until you remove the #

# --------------------
# | Network Settings |
# --------------------
[network]
# settings of your Wifi network, if you use a (supported) wifi-dongle
# Only supports WPA security, no WEP or access points without security (dive into the command line for that!)
wifi_network = 
wifi_password = 

# Set the name of the MusicBox. In this way you can create different devices on the same network (in different rooms).
# The webinterface is accessible via e.g. http://kitchen.local/, and multiple devices will show up in AirTunes
# You can only use normal characters and numbers in the name (no spaces, dots, etc)
# You can even have different devices with different Spotify accounts when needed.
name = MusicBox

# Mount Windows Network Drive on boot (via samba/cifs)
# The address is exactly how Samba mount works: //servername/mountpoint/directory
# e.g. //192.168.1.5/musicmount or //server.local/shared/music
# if the mount needs a username/password, also set it (leave empty for guest-access)
# Don't forget to let Mopidy/MusicBox scan the contents at first boot (see below) 
mount_address = 
mount_user = 
mount_password = 

# Here you can change the default workgroup of the Windows network.
# This will set the workgroup to the name you want
workgroup = WORKGROUP

# Enable SSH
# Comment out this line (remove the #) to enable remote login via SSH on MusicBox
enable_ssh = false

# By default, MusicBox waits for the network to come up, since there is not much to do without a network.
# If you want to skip this, e.g. for testing purposes, uncomment this line
wait_for_network = true

# -----------
# | Spotify |
# -----------
[spotify]
# Enable the service or not (true or false)
# Set to true to enable Spotify and fill in your credentials
enabled = false
username = 
password = 
# The bitrate, the quality of the music played by Spotify, can be set to 96, 160 (default) or 320
bitrate = 320
cache_dir = ""

# -----------
# | Last.FM |
# -----------
[scrobbler]
# Enable this to let Last.FM track the tracks you played
# Enable the service or not (true or false)
# Set to true to enable Last.FM and fill in your credentials
enabled = false
username = 
password = 

# --------------
# | SoundCloud |
# --------------
[soundcloud]
# SoundCloud Settings (beta!)
# Edit this if you want to add soundcloud support. You have to get a token via http://www.mopidy.com/authenticate
# and fill it in here e.g.
# auth_token = 1-1111-1111111
enabled = false
auth_token = 
# The number of songs in the list
explore_songs = 30

# ----------------
# | Google Music |
# ----------------
[gmusic]
# Google Music Settings (beta!)
# The device ID is a 16-digit hexadecimal string (without a '0x' prefix) identifying the Android device registered for Google Play Music.
# You can obtain this ID by dialing *#*#8255#*#* on your phone (see the aid) or using an app like Android Device ID (see the Google Service Framework ID Key).
# You may also leave this field empty. MusicBox will try to find the ID by itself. See the Mopidy logs for more information.
# More info at https://github.com/hechtus/mopidy-gmusic
# Enable the service or not (true or false)
# Set to true to enable Google Music
# NOTE: This can slowdown the start of MusicBox. Please be patient when it starts.
enabled = false
all_access = true
username  = 
password = 
deviceid = 

# ----------
# | Dirble |
# ----------
[dirble]
# Edit this if you want to add Dirble, browsing of international radiostations. 
# Optionally you can get an api-key by creating an account at http://www.dirble.com/
# Then go to the section 'Your API-Keys' and copy the key you see
# and fill it in here e.g:
# api_key = 473279e3fa0e7010cbbbb40ecc31890d46e57a2e
# Enable the service or not (true or false)
# Set to true to enable Dirble
enabled = true
api_key = 473279e3fa0e7010cbbbb40ecc31890d46e57a2e
countries = US, NL, DE, NO, SE

# ------------
# | Subsonic |
# ------------
[subsonic]
# Edit these lines for Subsonic support
# Set the hostname = some.website.com (leave off http/https)
# Enable the service or not (true or false)
# Set to true to enable Subsonic
enabled = false
hostname = 
# Set the port. e.g. port = 8888
port = 
username = 
password = 
# SSL yes or no
ssl = 

# ----------------
# | Tunein Radio |
# ----------------
[tunein]
enabled = true
timeout = 5000

# ------------------------
# | The Internet Archive |
# ------------------------
[internetarchive]
# Listen to sounds and music from the Internet Archive
# For more info see http://mopidy-internetarchive.readthedocs.org/en/latest/
enabled = false
# archive.org base URL
#base_url = http://archive.org
# collections for searching/browsing
#collections = audio, audio_bookspoetry, audio_foreign, audio_music, audio_news, audio_podcast
# media types for searching/browsing
#mediatypes = audio, etree
# audio file formats, in order of preference
#formats = VBR MP3, MP3
# sort order for browsing: <fieldname> (asc|desc)
# fieldnames: avg_rating creatorSorter date downloads month public date stars titleSorter week year
#browse_order = creatorSorter desc

# -----------
# | Soma FM |
# -----------
[somafm]
# Play radiostations from Soma FM
# see https://github.com/AlexandrePTJ/mopidy-somafm
# SomaFM does not provide every possible combinaton of encoding and quality.
# In example, on the date of 2014/03/15, mp3 + highest gives only 3 playlists while mp3 + fast gives 29
enabled = false
encoding = mp3
quality = fast

# -----------
# | Podcast |
# -----------
[podcast]
# Play Podcasts from different sources
# See https://github.com/tkem/mopidy-podcast
# TODO: You cannot add settings for [podcast-itunes] or [podcast-gpodder]
# because it breaks the startup script (won't read dashes in section names
enabled = true
# podcast update interval in seconds
##update_interval = 86400
# sort order: asc (oldest first) or desc (newest first)
##sort_order = desc
# Add feeds here
feeds = 

# ---------------
# | AudioAddict |
# ---------------
[audioaddict]
# enable plugin
enabled = false
# username (email) and password (optional)
#username =
#password =
# you need an account if you want to set stream quality
# valid options are:
#   40k, 64k (free)
#   40k, 64k, 128k, 320k (premium)
quality = 64k
# enable or disable individual stations
difm = true
radiotunes = true
rockradio = true
jazzradio = true
frescaradio = true

# ---------------------
# | MusicBox Settings |
# ---------------------
[musicbox]
# To secure your device, change the default password to something else.
# For security, the value in this file will be automatically cleaned out when the password is set in MusicBox
root_password = 

# Uncomment this one to let MusicBox automatically resize the filesystem 
# of your SD Card, so the system uses all the space of your card. Recommended because otherwise the card might fill up. 
# This is beta, you can lose data on your card if you enable this!!  
# (If so, you can put the original MusicBox image on it again and start over) 
resize_once = true

# Uncomment this setting to let Mopidy/MusicBox scan on startup for new music files 
# on the card or the network (could take a while!)
# Local files works ok for moderate size collections. Large sizes could give problems.
# IMPORTANT: if you set ALWAYS to true, this scan happens every boot.
# This can slowdown the boot a lot. Disable it again if your music doesn't change, or
# use ONCE to, yes, scan your music files only once.
#scan_once = true
scan_always = true

# MusicBox can automatically start playing a stream/song after startup.
# It will wait a number of seconds before trying to play,
# to give the system (Mopidy) time to start. Since this time can vary per device, network and configuration,
# you can also set the number of seconds. If it does not work, give the system more time, e.g. 60 seconds.
# e.g. autoplay = http://nprdmp.ic.llnwd.net/stream/nprdmp_live01_mp3 or local:track:MusicBox/Music%20File.mp3 (on the SD Card)
autoplay = 
autoplaywait = 60

# -------------
# | Streaming |
# -------------
# Set these options to True to enable streaming to Pi MusicBox here.
# AirTunes (using Shairport):
enable_shairport = 

# DLNA/uPnP/OpenHome (using upmpdcli):
enable_upnp = 

# ------------------
# | Audio Settings |
# ------------------
# Because of limitations with some USB-DACs, MusicBox downsamples USB sound to 44k by default. Set to false to disable.
downsample_usb = true

# Set default output. This overrides the automatic detection (which sets to usb audio if an usb audio device
# is found, else to hdmi (if hdmi is connected at boot), and otherwise just to the analog out)
# i2s (HifiBerry et all) is not detected automatically. Set it here to be able to use it. 
# Options: analog, hdmi, usb, hifiberry_dac, hifiberry_digi, hifiberry_dacplus, iqaudio_dac, wolfson (wolfson needs different kernel)
output = 

[audio]
# Set the startup volume of MusicBox
# Values: from 0 to 100
mixer_volume = 85

# --------------------------------------------------------------------------
# | OTHER Settings                                                         |
# | You probably don't want to edit the settings below this line. Really.  |
# | Unless you know what you're doing, or you want to change the webclient |
# --------------------------------------------------------------------------
# This sets the gstreamer buffer. It's a bit tricky...
# If you have problems with stuttering sound, try other values here, like:
# or
#output = alsasink buffer-time=300000 latency-time=20000
#output = alsasink buffer-time=200000 latency-time=10000
output = alsasink

mixer = software

#optionally, you can use alsamixer. This enables you to use hardware mixers of usb/audiocards.
#Set the previous setting to:
#mixer = alsamixer
#And set the card and contol below. E.g. 
#card = 1 
#control = Master 
#Run the command 'amixer scontrols' from the commandline to list available controls on your system
#See https://github.com/mopidy/mopidy-alsamixer 

[alsamixer]
card = 
control = 

[stream]
enabled = true
protocols = http, https, mms, file, rtmp, rtmps, rtsp, udp, mmsh

[mpris]
enabled = false

[http]
enabled = true
hostname = 0.0.0.0
port = 6680
#Disable zeroconf
zeroconf = ""

# -------------
# | Webclient |
# -------------
# Here you can change the default webclient
# options: /opt/webclient /opt/moped
static_dir = /opt/webclient

[websettings]
enabled = true
musicbox = true
config_file  = /boot/config/settings.ini

[mpd]
hostname = 0.0.0.0

[logging]
config_file = /etc/mopidy/logging.conf
debug_file = /var/log/mopidy/mopidy-debug.log

[local]
enabled = true
media_dir = /music
playlists_dir = /var/lib/mopidy/playlists
data_dir = /var/lib/mopidy/localdata
#This sets the method of indexing local files
#You can set it to json or whoosh. Whoosh might be better with large collections, JSON is a bit more mature.
# TODO: You cannot add settings for [local-sqlite]
# because it breaks the startup script (won't read dashes in section names
library = sqlite
#library = whoosh
#library = json

scan_timeout = 1000
scan_flush_threshold = 1000
excluded_file_extensions = .html, .jpeg, .jpg, .log, .nfo, .png, .txt, .mkv, .avi, .divx, .qt, .wmv, .htm, .zip, .rar, .gz, .pdf, .exe, .ini, .mid, .db, .m3u, .sfv, .midi

